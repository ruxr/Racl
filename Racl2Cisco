#!/bin/sh
H="Скрипт конвертации ACL из формата Racl в формат загрузки конфигурации Cisco

	@(#) Racl2Cisco V5.0 © 2024 by Roman Oreshnikov

	Это бесплатное ПО поставляется без каких-либо ГАРАНТИЙ

Использование: Racl2Cisco [параметр] src dst

Параметры:
  -d DIR  Каталог для сохранения ACL
  -h      Вывод этого текста

Аргументы:
  src - файл Racl с текущими ACL
  dst - файл Racl с новыми ACL

Сообщать об ошибках <r.oreshnikov@gmail.com>"
End() { echo "${1:+Racl2Cisco: }${*# }" >&2; exit 1; }
Chk() {
	[ -z "$1" ] || End "Параметр -$P уже задан${2:- как '$1'!}"
	case ${2:-/$OPTARG/} in
	//|/*//*|*[\ ]*|/-*) End "Недопустимое значение '$OPTARG' для -$P!"
	esac
}
RACL_D=
while getopts d:h P; do
	case $P in
	d) Chk "$RACL_D" RACL_D; RACL_D=$OPTARG;;
	h) echo "$H"; exit;;
	?) End "" "'Racl2Cisco -h' для дополнительной информации"
	esac
done
shift $(($OPTIND - 1))
[ $# = 2 ] || End "Неверное число входных параметров!"
for P do [ -f "$1" -a -r "$1" ] || End "Файл '$1' недоступен!"; done
gawk -vdir=$RACL_D '
BEGIN { acl = "ip access-list extended " }
BEGINFILE { if(s) d = FILENAME; else s = FILENAME }
{
	if($1 ~ /pass|drop|evaluate/) {
		if(d) D[a][++i] = $0; else S[h][a][++i] = $0
	} else if($1 == "DEV") { f++; delete S[$2] }
	else if(d) D[a = $2][i = 1] = $0
	else { delete S[$2][$3]; S[h = $2][a = $3][i = 1] = $0 }
}
END {
	asorti(S, H)
	if(f && dir) for(h in H) {
		asorti(S[h = H[h]], A)
		for(a in A) for(i in S[h][A[a]]) print S[h][A[a]][i] >s
	}
	asorti(D, A)
	for(a in A) {
		n = split(D[a = A[a]][1], H)
		for(s = 2; s++ < n;) {
			c = (h = H[s]) " " a
			for(i in D[a]) R[c][i] = D[a][i]
			R[c][1] = "ACL " c
			if(h in S && a in S[h]) {
				if((c = length(D[a])) != length(S[h][a])) c = 0
				else for(i = 1; i++ < c;)
					if(D[a][i] != S[h][a][i])
						{ c = 0; break }
				if(!c) Out(a, h, "изменен на МСЭ", 1)
				delete S[h][a]
			} else Out(a, h, "добавлен на МСЭ", 1)
		}
	}
	asorti(S, H)
	for(h in H) {
		asorti(S[H[h]], A); for(a in A) Out(A[a], H[h], "удален с МСЭ")
	}
	if(dir) {
		for(f in F) print "end" >f
		asorti(R, A)
		for(a in A) for(i in R[A[a]]) print R[A[a]][i]
	}
}
function Net(s) {
	split(s, N, "/")
	s = rshift(0xffffffff, N[2])
	return N[1] " " and(rshift(s, 24), 255) "." and(rshift(s, 16), 255) "."\
                and(rshift(s, 8), 255) "." and(s, 255)
}
function Out(a, h, t, s, C) {
	t = "Racl2Cisco: ACL \"" a "\" " t " \"" h "\""
	if(!dir) {
		print t
		if(s && a in S[h]) {
			for(i in D[a]) if(i > 1) C[D[a][i]] = int(i)
			f = "  Удалено:\n\t"
			for(i in S[h][a])
				if(S[h][a][i] in C) delete C[S[h][a][i]]
				else if(i > 1) { print f S[h][a][i]; f = "\t" }
			f = "  Добавлено:\n\t"
			asort(C)
			for(i in C) { print f D[a][C[i]]; f = "\t" }
		}
		return
	}
	print t >"/dev/stderr"
	F[f = dir "/" h]
	print "no " acl a >f
	if(s) for(i in D[a]) {
		split(D[a][i], T)
		for(t in T)
			if(T[t] == "pass") l = "permit"
			else if(T[t] == "drop") l = "deny"
			else if(T[t] ~ /\//) l = l " " Net(T[t])
			else if(T[t] ~ /\./) l = l " host " T[t]
			else if(T[t] == "ACL" && t == 1) { l = acl a; break }
			else l = l " " T[t]
		print l >f
	}
}' "$@"
